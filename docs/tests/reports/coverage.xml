<?xml version="1.0" encoding="UTF-8"?>
<snapshot methodcount="132" methodscovered="88" statementcount="675" statementscovered="568" totalcount="807" totalcovered="656">
  <package name="Library" methodcount="4" methodscovered="3" statementcount="11" statementscovered="10" totalcount="15" totalcovered="13">
    <subpackage name="View" methodcount="0" methodscovered="0" statementcount="2" statementscovered="2" totalcount="2" totalcovered="2">
      <class name="MaitreCorbeaux_View_Helper_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/View/Helper/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage View</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_View_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_View_Helper_Exception extends MaitreCorbeaux_View_Exception</sourceline>
          <sourceline coveredcount="1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_View_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/View/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage View</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_View_Exception extends MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="1">{}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
    <class name="MaitreCorbeaux_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
      <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Exception.php">
        <sourceline coveredcount="0">&lt;?php</sourceline>
        <sourceline coveredcount="0">/**</sourceline>
        <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
        <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
        <sourceline coveredcount="0"> * @package Library</sourceline>
        <sourceline coveredcount="0"> * @see Zend_Exception</sourceline>
        <sourceline coveredcount="0"> */</sourceline>
        <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Exception extends Zend_Exception</sourceline>
        <sourceline coveredcount="1">{}</sourceline>
      </sourcefile>
    </class>
    <subpackage name="Paginator" methodcount="4" methodscovered="3" statementcount="8" statementscovered="7" totalcount="12" totalcovered="10">
      <class name="MaitreCorbeaux_Paginator_Adapter_ModelCollection" methodcount="4" methodscovered="3" statementcount="8" statementscovered="7" totalcount="12" totalcovered="10">
        <sourcefile name="ModelCollection.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Paginator/Adapter/ModelCollection.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Paginator adapter that internally use a</sourceline>
          <sourceline coveredcount="0"> * MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0"> * created from the Zend_Db_Select provided</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Paginator</sourceline>
          <sourceline coveredcount="0"> * @see Zend_Paginator_Adapter_DbSelect</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Paginator_Adapter_ModelCollection</sourceline>
          <sourceline coveredcount="0">extends Zend_Paginator_Adapter_DbSelect</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_mapper;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    public function __construct(</sourceline>
          <sourceline coveredcount="0">        Zend_Db_Select $select,</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Mapper_AbstractMapper $mapper</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        parent::__construct($select);</sourceline>
          <sourceline coveredcount="4">        $this-&gt;setMapper($mapper);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $offset</sourceline>
          <sourceline coveredcount="0">     * @param int $itemCountPerPage</sourceline>
          <sourceline coveredcount="0">     * @see Zend_Paginator_Adapter_DbSelect::getItems()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getItems($offset, $itemCountPerPage)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $items = parent::getItems($offset, $itemCountPerPage);</sourceline>
          <sourceline coveredcount="4">        return $this-&gt;_mapper-&gt;createCollection($items);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    public function getMapper()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        return $this-&gt;_mapper;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    public function setMapper(MaitreCorbeaux_Model_Mapper_AbstractMapper $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $this-&gt;_mapper = $value;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
  </package>
  <package name="Default" methodcount="112" methodscovered="71" statementcount="587" statementscovered="484" totalcount="699" totalcovered="555">
    <subpackage name="Controller" methodcount="10" methodscovered="3" statementcount="80" statementscovered="69" totalcount="90" totalcovered="72">
      <class name="IndexController" methodcount="2" methodscovered="1" statementcount="8" statementscovered="7" totalcount="10" totalcovered="8">
        <sourcefile name="IndexController.php" sourcefile="/var/www/maitre-corbeaux.com/application/controllers/IndexController.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Index Controller</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * Display the home page</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Controller</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class IndexController extends Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize static cache</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function init()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $this-&gt;_helper-&gt;cache(array('index'), array('activity'));</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Display the home page</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function indexAction()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $service = new MaitreCorbeaux_Service_Activity_Item();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $this-&gt;view</sourceline>
          <sourceline coveredcount="-1">             -&gt;headTitle(</sourceline>
          <sourceline coveredcount="1">                'Site personnel de Lucas Corbeaux, dÃ©veloppeur senior sur Angers',</sourceline>
          <sourceline coveredcount="0">                'PREPEND'</sourceline>
          <sourceline coveredcount="1">             );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $this-&gt;view-&gt;activityItems = $service-&gt;fetchLast();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
          <sourceline coveredcount="0"></sourceline>
        </sourcefile>
      </class>
      <class name="ErrorController" methodcount="2" methodscovered="0" statementcount="40" statementscovered="35" totalcount="42" totalcovered="35">
        <sourcefile name="ErrorController.php" sourcefile="/var/www/maitre-corbeaux.com/application/controllers/ErrorController.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Error Controller</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * Display and log error messages</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Controller</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class ErrorController extends Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Return the Log resource if available</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return  Zend_Log|false</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _getLog()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $bootstrap = $this-&gt;getInvokeArg('bootstrap');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        if (!$bootstrap-&gt;hasResource('Log')) {</sourceline>
          <sourceline coveredcount="-1">            return false;</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        return $bootstrap-&gt;getResource('Log');</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Display the error page and log the error message</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function errorAction()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        $errors = $this-&gt;_getParam('error_handler');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="5">        if (!$errors) {</sourceline>
          <sourceline coveredcount="1">            $this-&gt;view-&gt;message = "Page d'erreur";</sourceline>
          <sourceline coveredcount="1">            return;</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        switch ($errors-&gt;type) {</sourceline>
          <sourceline coveredcount="4">            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE:</sourceline>
          <sourceline coveredcount="4">            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_CONTROLLER:</sourceline>
          <sourceline coveredcount="4">            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ACTION:</sourceline>
          <sourceline coveredcount="3">                $this-&gt;getResponse()</sourceline>
          <sourceline coveredcount="3">                     -&gt;setHttpResponseCode(404);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">		        $this-&gt;view</sourceline>
          <sourceline coveredcount="3">		             -&gt;headTitle('404 - page non trouvÃ©e', 'PREPEND');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">                $this-&gt;view</sourceline>
          <sourceline coveredcount="3">                     -&gt;message = 'Page non trouvÃ©e';</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">		        $priority = Zend_Log::NOTICE;</sourceline>
          <sourceline coveredcount="-1">                break;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">            default:</sourceline>
          <sourceline coveredcount="1">                $this-&gt;getResponse()</sourceline>
          <sourceline coveredcount="1">                     -&gt;setHttpResponseCode(500);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">		        $this-&gt;view</sourceline>
          <sourceline coveredcount="1">		             -&gt;headTitle('500 - une erreur est survenue', 'PREPEND');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">                $this-&gt;view</sourceline>
          <sourceline coveredcount="1">                     -&gt;message = "Une erreur est survenue durant votre navigation";</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">		        $priority = Zend_Log::ERR;</sourceline>
          <sourceline coveredcount="-1">                break;</sourceline>
          <sourceline coveredcount="4">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        if ($log = $this-&gt;_getLog()) {</sourceline>
          <sourceline coveredcount="4">            $log-&gt;log($this-&gt;view-&gt;message, $priority, $errors-&gt;exception);</sourceline>
          <sourceline coveredcount="4">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        if ($this-&gt;getInvokeArg('displayExceptions') == true) {</sourceline>
          <sourceline coveredcount="-1">            $this-&gt;view-&gt;exception = $errors-&gt;exception;</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;view-&gt;request = $errors-&gt;request;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
      <class name="ActivityController" methodcount="2" methodscovered="1" statementcount="9" statementscovered="8" totalcount="11" totalcovered="9">
        <sourcefile name="ActivityController.php" sourcefile="/var/www/maitre-corbeaux.com/application/controllers/ActivityController.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Controller</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Controller</sourceline>
          <sourceline coveredcount="0"> * @see Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class ActivityController extends Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize static cache</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function init()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $this-&gt;_helper-&gt;cache(array('index'), array('activity'));</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Display the activity page : All Activity Items paginated</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function indexAction()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $this-&gt;view</sourceline>
          <sourceline coveredcount="-1">             -&gt;headTitle(</sourceline>
          <sourceline coveredcount="2">                'ActivitÃ© Internet de Lucas Corbeaux, dÃ©veloppeur senior sur Angers',</sourceline>
          <sourceline coveredcount="0">                'PREPEND'</sourceline>
          <sourceline coveredcount="2">             );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        $page = $this-&gt;_getParam('page');</sourceline>
          <sourceline coveredcount="2">        $service = new MaitreCorbeaux_Service_Activity_Item();</sourceline>
          <sourceline coveredcount="2">        $this-&gt;view-&gt;paginator = $service-&gt;paginateAll($page);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
          <sourceline coveredcount="0"></sourceline>
        </sourcefile>
      </class>
      <class name="SitemapController" methodcount="1" methodscovered="1" statementcount="11" statementscovered="11" totalcount="12" totalcovered="12">
        <sourcefile name="SitemapController.php" sourcefile="/var/www/maitre-corbeaux.com/application/controllers/SitemapController.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Sitemap Controller</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * Generate the Google Sitemap</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Controller</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class SitemapController extends Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    public function indexAction()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        $this-&gt;_helper-&gt;contextSwitch()</sourceline>
          <sourceline coveredcount="3">                      -&gt;addActionContext('index', 'xml')</sourceline>
          <sourceline coveredcount="3">                      -&gt;initContext('xml');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        // We remove "non-application" link from the Bootstrap</sourceline>
          <sourceline coveredcount="3">        $navigation = $this-&gt;view-&gt;getHelper('Navigation')</sourceline>
          <sourceline coveredcount="3">                                 -&gt;getContainer();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        foreach ($navigation as $page) {</sourceline>
          <sourceline coveredcount="3">            if (!$page instanceof Zend_Navigation_Page_Mvc) {</sourceline>
          <sourceline coveredcount="3">                $navigation-&gt;removePage($page);</sourceline>
          <sourceline coveredcount="3">            }</sourceline>
          <sourceline coveredcount="3">        }</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="ContactController" methodcount="3" methodscovered="0" statementcount="12" statementscovered="8" totalcount="15" totalcovered="8">
        <sourcefile name="ContactController.php" sourcefile="/var/www/maitre-corbeaux.com/application/controllers/ContactController.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Contact controller</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Controller</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class ContactController extends Zend_Controller_Action</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Define the Head Title</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function init()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $this-&gt;view</sourceline>
          <sourceline coveredcount="-1">             -&gt;headTitle(</sourceline>
          <sourceline coveredcount="2">                'Contactez Lucas Corbeaux, dÃ©veloppeur senior sur Angers',</sourceline>
          <sourceline coveredcount="0">                'PREPEND'</sourceline>
          <sourceline coveredcount="2">             );</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    public function indexAction()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $service = new MaitreCorbeaux_Service_Contact();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        if ($this-&gt;_request-&gt;isPost()</sourceline>
          <sourceline coveredcount="1">            &amp;&amp; $service-&gt;send($this-&gt;_request-&gt;getPost())) {</sourceline>
          <sourceline coveredcount="-1">            $this-&gt;_helper</sourceline>
          <sourceline coveredcount="-1">                 -&gt;redirector('confirm');</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $this-&gt;view-&gt;form = $service-&gt;getForm();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    public function confirmAction()</sourceline>
          <sourceline coveredcount="0">    {}</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
    <subpackage name="Service" methodcount="43" methodscovered="13" statementcount="207" statementscovered="124" totalcount="250" totalcovered="137">
      <class name="MaitreCorbeaux_Service_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="0" totalcount="1" totalcovered="0">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Service/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Exception extends MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="-1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="0" totalcount="1" totalcovered="0">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Service/Activity/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Exception</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Exception</sourceline>
          <sourceline coveredcount="-1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="0" totalcount="1" totalcovered="0">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Service/Activity/Import/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Exception</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Activity_Exception</sourceline>
          <sourceline coveredcount="-1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Contact" methodcount="7" methodscovered="2" statementcount="50" statementscovered="39" totalcount="57" totalcovered="41">
        <sourcefile name="Contact.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Contact.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Contact service</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Contact</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Mail</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_mail;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Form</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_form;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_emailAddress;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Send an email using the post data</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return bool</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function send(array $data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        $form = $this-&gt;getForm();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        if (!$form-&gt;isValid($data)) {</sourceline>
          <sourceline coveredcount="2">            return false;</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $mail = $this-&gt;getMail();</sourceline>
          <sourceline coveredcount="1">        $mail-&gt;setSubject($form-&gt;getValue('subject'))</sourceline>
          <sourceline coveredcount="1">             -&gt;setBodyText($form-&gt;getValue('body'));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $senderEmail = $form-&gt;getValue('email');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        if ($form-&gt;getValue('copy')) {</sourceline>
          <sourceline coveredcount="-1">            $copyMail = clone $mail;</sourceline>
          <sourceline coveredcount="-1">            $copyMail-&gt;addTo($senderEmail)</sourceline>
          <sourceline coveredcount="-1">                     -&gt;send();</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        $mail-&gt;setReplyTo($senderEmail)</sourceline>
          <sourceline coveredcount="1">             -&gt;addTo($this-&gt;getEmailAddress())</sourceline>
          <sourceline coveredcount="1">             -&gt;send();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return true;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Mail</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getMail()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        if (null === $this-&gt;_mail) {</sourceline>
          <sourceline coveredcount="1">            $this-&gt;_mail = new Zend_Mail();</sourceline>
          <sourceline coveredcount="1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $this-&gt;_mail;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Mail $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Contact</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setMail(Zend_Mail $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_mail = $mail;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Form</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getForm()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        if (null === $this-&gt;_form) {</sourceline>
          <sourceline coveredcount="4">            $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="4">            $router = $bootstrap-&gt;getResource('router');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">            $action = $router-&gt;assemble(array(</sourceline>
          <sourceline coveredcount="4">                'action' =&gt; 'index',</sourceline>
          <sourceline coveredcount="4">                'controller' =&gt; 'contact',</sourceline>
          <sourceline coveredcount="0">                'module' =&gt; 'default'</sourceline>
          <sourceline coveredcount="4">            ), 'default', true);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">            $this-&gt;_form = new MaitreCorbeaux_Form_Contact(array(</sourceline>
          <sourceline coveredcount="0">                'action' =&gt; $action</sourceline>
          <sourceline coveredcount="4">            ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">            $reCaptchaService = $bootstrap-&gt;getResource('ReCaptcha');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">            $this-&gt;_form-&gt;getElement('captcha')</sourceline>
          <sourceline coveredcount="4">                        -&gt;getCaptcha()</sourceline>
          <sourceline coveredcount="4">                        -&gt;setService($reCaptchaService);</sourceline>
          <sourceline coveredcount="4">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        return $this-&gt;_form;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Form $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Contact</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setForm(Zend_Form $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_form = $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getEmailAddress()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        if (null === $this-&gt;_emailAddress) {</sourceline>
          <sourceline coveredcount="1">            $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="1">            $contactOptions = $bootstrap-&gt;getResource('Contact');</sourceline>
          <sourceline coveredcount="1">            $this-&gt;_emailAddress = $contactOptions['emailAddress'];</sourceline>
          <sourceline coveredcount="1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $this-&gt;_emailAddress;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Contact</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setEmailAddress($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_emailAddress = (string) $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_AbstractService" methodcount="4" methodscovered="1" statementcount="11" statementscovered="6" totalcount="15" totalcovered="7">
        <sourcefile name="AbstractService.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/AbstractService.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Base class for Service Layer</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">abstract class MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Application_Bootstrap_BootstrapAbstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_bootstrap;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected  $_mapper;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Application_Bootstrap_BootstrapAbstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getBootstrap()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="9">        if (null === $this-&gt;_bootstrap) {</sourceline>
          <sourceline coveredcount="9">            $frontController = Zend_Controller_Front::getInstance();</sourceline>
          <sourceline coveredcount="9">            $this-&gt;_bootstrap = $frontController-&gt;getParam('bootstrap');</sourceline>
          <sourceline coveredcount="9">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="9">        return $this-&gt;_bootstrap;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Application_Bootstrap_BootstrapAbstract $bootstrap</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setBootstrap(Zend_Application_Bootstrap_BootstrapAbstract</sourceline>
          <sourceline coveredcount="0">                                 $bootstrap)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_bootstrap = $bootstrap;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Always returns null</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * This method is used as a Factory Method, so child class is</sourceline>
          <sourceline coveredcount="0">     * responsible of the type of mapper to instantiate by default.</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public  function getMapper()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        return null;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Mapper_Abstract $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public  function setMapper(MaitreCorbeaux_Model_Mapper_Abstract $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_mapper = $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Item" methodcount="6" methodscovered="3" statementcount="37" statementscovered="15" totalcount="43" totalcovered="18">
        <sourcefile name="Item.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Item.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Item</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Sanitize data from import before storing them</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _cleanImportData(MaitreCorbeaux_Model_Activity_Item $item)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $title = $item-&gt;getTitle();</sourceline>
          <sourceline coveredcount="-1">        $description = $item-&gt;getDescription();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        // Item title may contains HTML entities</sourceline>
          <sourceline coveredcount="-1">        $title = html_entity_decode($title, ENT_QUOTES);</sourceline>
          <sourceline coveredcount="0">        // Item description may contains HTML tags and entities</sourceline>
          <sourceline coveredcount="-1">        $description = strip_tags($description);</sourceline>
          <sourceline coveredcount="-1">        $description = html_entity_decode($description, ENT_QUOTES);</sourceline>
          <sourceline coveredcount="-1">        $description = trim($description);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $item-&gt;populate(array(</sourceline>
          <sourceline coveredcount="-1">            'title' =&gt; $title,</sourceline>
          <sourceline coveredcount="0">            'description' =&gt; $description</sourceline>
          <sourceline coveredcount="-1">        ));</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Import an ActivityItem</sourceline>
          <sourceline coveredcount="0">     * Checks first if the externalId exists for this Activity Source</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Item $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function import(MaitreCorbeaux_Model_Activity_Item $item)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_cleanImportData($item);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $mapper = $this-&gt;getMapper();</sourceline>
          <sourceline coveredcount="-1">        $existingItem = $mapper-&gt;findByExternalId(</sourceline>
          <sourceline coveredcount="-1">            $item-&gt;getExternalId(),</sourceline>
          <sourceline coveredcount="-1">            $item-&gt;getSource()</sourceline>
          <sourceline coveredcount="-1">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        if (null !== $existingItem) {</sourceline>
          <sourceline coveredcount="-1">            $item-&gt;setId($existingItem-&gt;getId());</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $mapper-&gt;save($item);</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Returns the n last Activity Items</sourceline>
          <sourceline coveredcount="0">     * We use bootstrap to get the number of items to return</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function fetchLast()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="1">        $config = $bootstrap-&gt;getOption('activityItem');</sourceline>
          <sourceline coveredcount="1">        $nbItems = $config['nbLast'];</sourceline>
          <sourceline coveredcount="1">        $mapper = $this-&gt;getMapper();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $mapper-&gt;fetchLast($nbItems);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Returns a paginator of Activity Items</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $page</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Paginator</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function paginateAll($page)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="2">        $config = $bootstrap-&gt;getOption('activityItem');</sourceline>
          <sourceline coveredcount="2">        $nbItems = $config['nbPaginator'];</sourceline>
          <sourceline coveredcount="2">        $mapper = $this-&gt;getMapper();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $mapper-&gt;paginateAll($page, $nbItems);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_ItemInterface</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_AbstractService::getMapper()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getMapper()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        if (null === $this-&gt;_mapper) {</sourceline>
          <sourceline coveredcount="3">            $this-&gt;_mapper = new MaitreCorbeaux_Model_Mapper_Activity_Item();</sourceline>
          <sourceline coveredcount="3">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        return $this-&gt;_mapper;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Mapper_Activity_ItemInterface $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_AbstractService::setMapper()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setMapper(</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Mapper_Activity_ItemInterface $value</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_mapper = $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Source" methodcount="3" methodscovered="0" statementcount="0" statementscovered="0" totalcount="3" totalcovered="0">
        <sourcefile name="Source.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Source.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Item data mapper</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Source</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Returns a collection of all the Activity Sources</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function fetchAll()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $mapper = $this-&gt;getMapper();</sourceline>
          <sourceline coveredcount="0">        return $mapper-&gt;fetchAll();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_SourceInterface</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_AbstractService::getMapper()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getMapper()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        if (null === $this-&gt;_mapper) {</sourceline>
          <sourceline coveredcount="0">            $this-&gt;_mapper = new MaitreCorbeaux_Model_Mapper_Activity_Source();</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        return $this-&gt;_mapper;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Mapper_Activity_SourceInterface $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Source</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_AbstractService::setMapper()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setMapper(</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Mapper_Activity_SourceInterface $value</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $this-&gt;_mapper = $value;</sourceline>
          <sourceline coveredcount="0">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Rss" methodcount="1" methodscovered="0" statementcount="14" statementscovered="11" totalcount="15" totalcovered="11">
        <sourcefile name="Rss.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Rss.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Class for importing Activity Item from RSS feed</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Rss</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Feed_Entry_Abstract $item</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_Activity_Import_Feed::_createActivityItem()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createActivityItem(Zend_Feed_Entry_Abstract $item)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $publicationDate = new Zend_Date($item-&gt;pubDate, Zend_Date::RSS);</sourceline>
          <sourceline coveredcount="0">        // We restores default timezone, as we don't want the RSS timezone to be used</sourceline>
          <sourceline coveredcount="1">        $publicationDate-&gt;setTimezone();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $data = array(</sourceline>
          <sourceline coveredcount="1">            'title' =&gt; $item-&gt;title,</sourceline>
          <sourceline coveredcount="1">            'description' =&gt; $item-&gt;description,</sourceline>
          <sourceline coveredcount="1">            'link' =&gt; $item-&gt;link,</sourceline>
          <sourceline coveredcount="1">            'externalId' =&gt; $item-&gt;guid,</sourceline>
          <sourceline coveredcount="0">            'publicationDate' =&gt; $publicationDate</sourceline>
          <sourceline coveredcount="1">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        if (mb_strlen($data['description']) &gt; 255) {</sourceline>
          <sourceline coveredcount="-1">            $data['description'] = mb_substr($data['description'], 0, 252)</sourceline>
          <sourceline coveredcount="-1">                                 . '...';</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return new MaitreCorbeaux_Model_Activity_Item($data);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_DeveloppezCom" methodcount="0" methodscovered="0" statementcount="2" statementscovered="2" totalcount="2" totalcovered="2">
        <sourcefile name="DeveloppezCom.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/DeveloppezCom.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Import Activity Items from Developpez.com blog RSS feed</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_Rss</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_DeveloppezCom</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Activity_Import_Rss</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_feedUrl = 'http://blog.developpez.com/xmlsrv/rss2.php?blog=331';</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Twitter" methodcount="7" methodscovered="4" statementcount="58" statementscovered="27" totalcount="65" totalcovered="31">
        <sourcefile name="Twitter.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Twitter.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Import Activity Items from Twitter REST API</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Twitter</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="1">implements MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Oauth_Token_Access</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_accessToken;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Service_Twitter</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_serviceTwitter;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Import Activity Items</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface::import()</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Service_Activity_Import_Exception</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function import()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $collection = new MaitreCorbeaux_Model_Collection_Activity_Item();</sourceline>
          <sourceline coveredcount="-1">        $twitter = $this-&gt;getServiceTwitter();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        if (null === $twitter-&gt;account-&gt;verifyCredentials()) {</sourceline>
          <sourceline coveredcount="-1">            throw new MaitreCorbeaux_Service_Activity_Import_Exception(</sourceline>
          <sourceline coveredcount="0">                'Unable to connect to Twitter REST API'</sourceline>
          <sourceline coveredcount="-1">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $options = array(</sourceline>
          <sourceline coveredcount="-1">            'count' =&gt; 200,</sourceline>
          <sourceline coveredcount="-1">            'trim_user' =&gt; 1,</sourceline>
          <sourceline coveredcount="0">            'include_rts' =&gt; 1</sourceline>
          <sourceline coveredcount="-1">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $statuses = $twitter-&gt;status-&gt;userTimeline($options);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        foreach ($statuses as $status) {</sourceline>
          <sourceline coveredcount="-1">            $model = $this-&gt;_createActivityItem($status);</sourceline>
          <sourceline coveredcount="-1">            $collection-&gt;add($model);</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        return $collection;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an Activity Item model from a SimpleXmlElement</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param SimpleXmlElement $status</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createActivityItem(SimpleXmlElement $status)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $link = 'http://twitter.com/lucascorbeaux/statuses/' . $status-&gt;id;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $publicationDate = new Zend_Date($status-&gt;created_at,</sourceline>
          <sourceline coveredcount="-1">                                         'EEE MMM dd HH:mm:ss zzz yyyy',</sourceline>
          <sourceline coveredcount="-1">                                         'en_US');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        /*</sourceline>
          <sourceline coveredcount="0">         *  Here is a quick fix, because Zend_Date doesn't seem to</sourceline>
          <sourceline coveredcount="0">         *  recognize the Year after the timezone offset</sourceline>
          <sourceline coveredcount="0">         */</sourceline>
          <sourceline coveredcount="-1">        $publicationDate-&gt;setYear(substr($status-&gt;created_at, -4))</sourceline>
          <sourceline coveredcount="-1">                        -&gt;setTimezone();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $model = new MaitreCorbeaux_Model_Activity_Item(array(</sourceline>
          <sourceline coveredcount="-1">            'title' =&gt; $status-&gt;text,</sourceline>
          <sourceline coveredcount="-1">            'description' =&gt; $status-&gt;text,</sourceline>
          <sourceline coveredcount="-1">            'link' =&gt; $link,</sourceline>
          <sourceline coveredcount="-1">            'externalId' =&gt; $link,</sourceline>
          <sourceline coveredcount="0">            'publicationDate' =&gt; $publicationDate</sourceline>
          <sourceline coveredcount="-1">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        return $model;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Use configuration to load and unserialize OAuth Access Token</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Oauth_Token_Access</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Service_Activity_Import_Exception</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createAccessToken()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="2">        $twitterConfig = $bootstrap-&gt;getResource('Twitter');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        if (!file_exists($twitterConfig['accessTokenPath'])) {</sourceline>
          <sourceline coveredcount="-1">            throw new MaitreCorbeaux_Service_Activity_Import_Exception(</sourceline>
          <sourceline coveredcount="0">                'Unable to find access token file'</sourceline>
          <sourceline coveredcount="-1">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $accessToken = unserialize(</sourceline>
          <sourceline coveredcount="2">            file_get_contents($twitterConfig['accessTokenPath'])</sourceline>
          <sourceline coveredcount="2">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        if (false === $accessToken</sourceline>
          <sourceline coveredcount="2">            || !$accessToken instanceof Zend_Oauth_Token_Access) {</sourceline>
          <sourceline coveredcount="-1">            throw new MaitreCorbeaux_Service_Activity_Import_Exception(</sourceline>
          <sourceline coveredcount="0">                'Invalid data in access token file'</sourceline>
          <sourceline coveredcount="-1">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $accessToken;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Oauth_Token_Access</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getAccessToken()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        if (null === $this-&gt;_accessToken) {</sourceline>
          <sourceline coveredcount="2">            $this-&gt;_accessToken = $this-&gt;_createAccessToken();</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        return $this-&gt;_accessToken;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Oauth_Token_Access $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Twitter</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setAccessToken(Zend_Oauth_Token_Access $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $this-&gt;_accessToken = $value;</sourceline>
          <sourceline coveredcount="1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Service_Twitter</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getServiceTwitter()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        if (null === $this-&gt;_serviceTwitter) {</sourceline>
          <sourceline coveredcount="1">            $accessToken = $this-&gt;getAccessToken();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">            $this-&gt;_serviceTwitter = new Zend_Service_Twitter(array(</sourceline>
          <sourceline coveredcount="1">                'username' =&gt; $accessToken-&gt;getParam('screen_name'),</sourceline>
          <sourceline coveredcount="0">                'accessToken' =&gt; $accessToken</sourceline>
          <sourceline coveredcount="1">            ));</sourceline>
          <sourceline coveredcount="1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this-&gt;_serviceTwitter;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Service_Twitter $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Twitter</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setServiceTwitter(Zend_Service_Twitter $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $this-&gt;_serviceTwitter = $value;</sourceline>
          <sourceline coveredcount="1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Github" methodcount="0" methodscovered="0" statementcount="1" statementscovered="0" totalcount="1" totalcovered="0">
        <sourcefile name="Github.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Github.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Import Activity Items from Github Atom feed</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_Atom</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Github</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Activity_Import_Atom</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_feedUrl = 'https://github.com/lucascorbeaux.atom';</sourceline>
          <sourceline coveredcount="-1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Feed" methodcount="5" methodscovered="2" statementcount="15" statementscovered="11" totalcount="20" totalcovered="13">
        <sourcefile name="Feed.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Feed.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Abstract class for importing Activity Item from feed</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">abstract class MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="1">implements MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_feedUrl;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Feed_Abstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_feed;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Convert the feed entry into an Activity Item model</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Feed_Entry_Abstract $item</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    abstract protected function _createActivityItem(Zend_Feed_Entry_Abstract $item);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface::import()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    final public function import()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $feed = $this-&gt;getFeed();</sourceline>
          <sourceline coveredcount="2">        $collection = new MaitreCorbeaux_Model_Collection_Activity_Item();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        foreach ($feed as $item) {</sourceline>
          <sourceline coveredcount="2">            $collection-&gt;add($this-&gt;_createActivityItem($item));</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $collection;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getFeedUrl()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        return $this-&gt;_feedUrl;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setFeedUrl($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_feedUrl = (string) $value;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Feed_Abstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getFeed()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        if (null === $this-&gt;_feed) {</sourceline>
          <sourceline coveredcount="-1">            $this-&gt;_feed = Zend_Feed::import($this-&gt;_feedUrl);</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this-&gt;_feed;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Feed_Abstract $feed</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setFeed(Zend_Feed_Abstract $feed)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $this-&gt;_feed = $feed;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Facade" methodcount="9" methodscovered="1" statementcount="3" statementscovered="3" totalcount="12" totalcovered="4">
        <sourcefile name="Facade.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Facade.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Facade to help importing Items from every Sources :</sourceline>
          <sourceline coveredcount="0"> * - Fetch Activity Sources from Activity Source service layer</sourceline>
          <sourceline coveredcount="0"> * - Acts as a factory for Activity Import services</sourceline>
          <sourceline coveredcount="0"> * - Handle import exceptions and log them</sourceline>
          <sourceline coveredcount="0"> * - Send every Items imported to the Activity Item service layer</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Facade</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_AbstractService</sourceline>
          <sourceline coveredcount="0">implements MaitreCorbeaux_Service_Activity_Import_ImportInterface</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_sources;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Log</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_log;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Cache_Core</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_cache;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Log information in any logger available</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $message</sourceline>
          <sourceline coveredcount="0">     * @param int $priority</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _log($message, $priority = Zend_Log::INFO)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $log = $this-&gt;getLog();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        if (null === $log) {</sourceline>
          <sourceline coveredcount="0">            return;</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $message = (string) $message;</sourceline>
          <sourceline coveredcount="0">        $log-&gt;log($message, $priority);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Import Activity Items from every Activity Sources</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Facade</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_Activity_Import_ImportInterface::import()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function import()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $service = new MaitreCorbeaux_Service_Activity_Item();</sourceline>
          <sourceline coveredcount="0">        $sources = $this-&gt;getSources();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $this-&gt;_log('Cleaning activity cache');</sourceline>
          <sourceline coveredcount="0">        $cache = $this-&gt;getCache();</sourceline>
          <sourceline coveredcount="0">        $cache-&gt;clean('matchingTag', array('activity'));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $this-&gt;_log('Start of activity items import');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        foreach ($sources as $source) {</sourceline>
          <sourceline coveredcount="0">            $slug = $source-&gt;getSlug();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">            /*</sourceline>
          <sourceline coveredcount="0">             * We handle exception here, because we don't want an error</sourceline>
          <sourceline coveredcount="0">             * in an activity source to stop importing the others</sourceline>
          <sourceline coveredcount="0">             */</sourceline>
          <sourceline coveredcount="0">            try {</sourceline>
          <sourceline coveredcount="0">                $importer = $this-&gt;factory($source);</sourceline>
          <sourceline coveredcount="0">                $this-&gt;_log("Start of $slug import");</sourceline>
          <sourceline coveredcount="0">                $items = $importer-&gt;import();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">                foreach ($items as $item) {</sourceline>
          <sourceline coveredcount="0">                    $this-&gt;_log('Import item ' . $item-&gt;getExternalId());</sourceline>
          <sourceline coveredcount="0">                    $item-&gt;setSource($source);</sourceline>
          <sourceline coveredcount="0">                    $service-&gt;import($item);</sourceline>
          <sourceline coveredcount="0">                }</sourceline>
          <sourceline coveredcount="0">            } catch (MaitreCorbeaux_Service_Activity_Import_Exception $e) {</sourceline>
          <sourceline coveredcount="0">                $this-&gt;_log($e, Zend_Log::CRIT);</sourceline>
          <sourceline coveredcount="0">            } catch (Zend_Exception $e) {</sourceline>
          <sourceline coveredcount="0">                $this-&gt;_log($e, Zend_Log::ERR);</sourceline>
          <sourceline coveredcount="0">            }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">            $this-&gt;_log("End of $slug import");</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $this-&gt;_log('End of activity items import');</sourceline>
          <sourceline coveredcount="0">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Factory method for getting an import class from an Activity Source model</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Source $source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function factory(MaitreCorbeaux_Model_Activity_Source $source)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        $slug = $source-&gt;getSlug();</sourceline>
          <sourceline coveredcount="0">        $className = 'MaitreCorbeaux_Service_Activity_Import_'</sourceline>
          <sourceline coveredcount="5">                   . ucfirst($slug);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="5">        return new $className();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getSources()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        if (null === $this-&gt;_sources) {</sourceline>
          <sourceline coveredcount="0">            $service = new MaitreCorbeaux_Service_Activity_Source();</sourceline>
          <sourceline coveredcount="0">            $this-&gt;_sources = $service-&gt;fetchAll();</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        return $this-&gt;_sources;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Collection_Activity_Source $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Facade</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setSources(</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Collection_Activity_Source $value</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $this-&gt;_sources = $value;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Log</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getLog()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        if (null === $this-&gt;_log) {</sourceline>
          <sourceline coveredcount="0">            $bootstrap = $this-&gt;getBootstrap();</sourceline>
          <sourceline coveredcount="0">            $this-&gt;_log = $bootstrap-&gt;getResource('log');</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        return $this-&gt;_log;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Log $log</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Facade</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setLog(Zend_Log $log)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $this-&gt;_log = $log;</sourceline>
          <sourceline coveredcount="0">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Cache_Core</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getCache()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        if (null === $this-&gt;_cache) {</sourceline>
          <sourceline coveredcount="0">            $manager = $this-&gt;getBootstrap()</sourceline>
          <sourceline coveredcount="0">                            -&gt;getResource('Cachemanager');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">            $this-&gt;_cache = $manager-&gt;getCache(Zend_Cache_Manager::PAGECACHE);</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        return $this-&gt;_cache;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Cache_Core $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Service_Activity_Import_Facade</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setCache(Zend_Cache_Core $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $this-&gt;_cache = $value;</sourceline>
          <sourceline coveredcount="0">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Service_Activity_Import_Atom" methodcount="1" methodscovered="0" statementcount="13" statementscovered="10" totalcount="14" totalcovered="10">
        <sourcefile name="Atom.php" sourcefile="/var/www/maitre-corbeaux.com/application/services/Activity/Import/Atom.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Class for importing Activity Item from Atom feed</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Service</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Service_Activity_Import_Atom</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Service_Activity_Import_Feed</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Feed_Entry_Abstract $item</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Service_Activity_Import_Feed::_createActivityItem()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createActivityItem(Zend_Feed_Entry_Abstract $item)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $publicationDate = new Zend_Date($item-&gt;published, Zend_Date::RFC_3339);</sourceline>
          <sourceline coveredcount="0">        // We restores default timezone, as we don't want the RSS timezone to be used</sourceline>
          <sourceline coveredcount="1">        $publicationDate-&gt;setTimezone();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $data = array(</sourceline>
          <sourceline coveredcount="1">            'title' =&gt; $item-&gt;title(),</sourceline>
          <sourceline coveredcount="1">            'description' =&gt; $item-&gt;content(),</sourceline>
          <sourceline coveredcount="1">            'link' =&gt; $item-&gt;link('alternate'),</sourceline>
          <sourceline coveredcount="1">            'externalId' =&gt; $item-&gt;id(),</sourceline>
          <sourceline coveredcount="0">            'publicationDate' =&gt; $publicationDate</sourceline>
          <sourceline coveredcount="1">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        if (mb_strlen($data['description']) &gt; 255) {</sourceline>
          <sourceline coveredcount="-1">            $data['description'] = mb_substr($data['description'], 0, 252)</sourceline>
          <sourceline coveredcount="-1">                                 . '...';</sourceline>
          <sourceline coveredcount="-1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return new MaitreCorbeaux_Model_Activity_Item($data);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
    <subpackage name="Model" methodcount="53" methodscovered="49" statementcount="253" statementscovered="244" totalcount="306" totalcovered="293">
      <class name="MaitreCorbeaux_Model_Collection_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Model/Collection/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Collection_Exception</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Mapper_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="0" totalcount="1" totalcovered="0">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Model/Mapper/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Mapper_Exception extends MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="-1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Exception" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Exception.php" sourcefile="/var/www/maitre-corbeaux.com/library/MaitreCorbeaux/Model/Exception.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Library</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Exception extends MaitreCorbeaux_Exception</sourceline>
          <sourceline coveredcount="1">{}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Collection_AbstractCollection" methodcount="16" methodscovered="16" statementcount="71" statementscovered="70" totalcount="87" totalcovered="86">
        <sourcefile name="AbstractCollection.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/Collection/AbstractCollection.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Abstract class for model collections</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="2"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="1"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see Countable</sourceline>
          <sourceline coveredcount="0"> * @see SeekableIterator</sourceline>
          <sourceline coveredcount="0"> * @see ArrayAccess</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">abstract class MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="-1">implements Countable, SeekableIterator, ArrayAccess</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Array for storing models in the collection</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var array</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_models = array();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Model class name for ensuring data in the collection is valid</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_modelClassName = null;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="1">     * Add a model to the collection</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Model_Collection_Exception</sourceline>
          <sourceline coveredcount="0">     * @param mixed $model</sourceline>
          <sourceline coveredcount="0">     * @param mixed $key</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function add($model, $key = null)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="26">        if (!$this-&gt;elementIsValid($model)) {</sourceline>
          <sourceline coveredcount="2">            throw new MaitreCorbeaux_Model_Collection_Exception(</sourceline>
          <sourceline coveredcount="14">                'Incorrect data added to the collection, expecting '</sourceline>
          <sourceline coveredcount="16">                . $this-&gt;_modelClassName . ', ' . get_class($model) . ' given'</sourceline>
          <sourceline coveredcount="16">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="24">        if (null === $key) {</sourceline>
          <sourceline coveredcount="24">            $this-&gt;_models[] = $model;</sourceline>
          <sourceline coveredcount="24">        } else {</sourceline>
          <sourceline coveredcount="14">            $this-&gt;_models[$key] = $model;</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="24">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Remove a model from the collection</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Model_Collection_Exception</sourceline>
          <sourceline coveredcount="2">     * @param MaitreCorbeaux_Model_AbstractModel $model</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function remove(MaitreCorbeaux_Model_AbstractModel $model)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $somethingRemoved = false;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        foreach ($this as $key =&gt; $value) {</sourceline>
          <sourceline coveredcount="2">            if ($value === $model) {</sourceline>
          <sourceline coveredcount="2">                unset($this[$key]);</sourceline>
          <sourceline coveredcount="2">                $somethingRemoved = true;</sourceline>
          <sourceline coveredcount="4">            }</sourceline>
          <sourceline coveredcount="4">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        if (!$somethingRemoved) {</sourceline>
          <sourceline coveredcount="2">            throw new MaitreCorbeaux_Model_Collection_Exception(</sourceline>
          <sourceline coveredcount="0">                'Tried to remove an unexistent model'</sourceline>
          <sourceline coveredcount="2">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="2"></sourceline>
          <sourceline coveredcount="2">    /**</sourceline>
          <sourceline coveredcount="2">     * Reset the collection</sourceline>
          <sourceline coveredcount="2">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function clear()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $this-&gt;_models = array();</sourceline>
          <sourceline coveredcount="2">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">    /**</sourceline>
          <sourceline coveredcount="0">     * Merge two collections together</sourceline>
          <sourceline coveredcount="0">     * Do NOT preserves indexes</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Collection_AbstractCollection $collection</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function merge(</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Collection_AbstractCollection $collection</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        foreach ($collection as $element) {</sourceline>
          <sourceline coveredcount="2">            $this-&gt;add($element);</sourceline>
          <sourceline coveredcount="4">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Check if the given element is valid</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_AbstractModel $element</sourceline>
          <sourceline coveredcount="0">     * @return bool</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function elementIsValid($element)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="26">        return $element instanceof $this-&gt;_modelClassName;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return int</sourceline>
          <sourceline coveredcount="0">     * @see Countable::count()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function count()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="17">        return count($this-&gt;_models);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="2"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="2">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $position</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     * @see SeekableIterator::seek()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function seek($position)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $this-&gt;rewind();</sourceline>
          <sourceline coveredcount="4">        $currentPosition = 0;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        while ($currentPosition &lt; $position &amp;&amp; $this-&gt;valid()) {</sourceline>
          <sourceline coveredcount="2">            $this-&gt;next();</sourceline>
          <sourceline coveredcount="2">            ++$currentPosition;</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="6">        if (!$this-&gt;valid()) {</sourceline>
          <sourceline coveredcount="4">            throw new MaitreCorbeaux_Model_Collection_Exception(</sourceline>
          <sourceline coveredcount="2">                'Invalid position'</sourceline>
          <sourceline coveredcount="4">            );</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return mixed</sourceline>
          <sourceline coveredcount="0">     * @see SeekableIterator::current()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function current()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="17">        return current($this-&gt;_models);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return mixed</sourceline>
          <sourceline coveredcount="2">     * @see SeekableIterator::key()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function key()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        return key($this-&gt;_models);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return mixed</sourceline>
          <sourceline coveredcount="0">     * @see SeekableIterator::next()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function next()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        return next($this-&gt;_models);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     * @see SeekableIterator::rewind()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function rewind()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="15">        reset($this-&gt;_models);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return bool</sourceline>
          <sourceline coveredcount="0">     * @see SeekableIterator::valid()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function valid()</sourceline>
          <sourceline coveredcount="1">    {</sourceline>
          <sourceline coveredcount="16">        return false !== $this-&gt;current();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param mixed $offset</sourceline>
          <sourceline coveredcount="0">     * @return bool</sourceline>
          <sourceline coveredcount="0">     * @see ArrayAccess::offsetExists()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function offsetExists($offset)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        return isset($this-&gt;_models[$offset]);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param mixed $offset</sourceline>
          <sourceline coveredcount="0">     * @return mixed</sourceline>
          <sourceline coveredcount="0">     * @see ArrayAccess::offsetGet()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function offsetGet($offset)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_models[$offset];</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param mixed $offset</sourceline>
          <sourceline coveredcount="0">     * @param mixed $value</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     * @see ArrayAccess::offsetSet()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function offsetSet($offset, $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="16">        $this-&gt;add($value, $offset);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="1">     *</sourceline>
          <sourceline coveredcount="1">     * @param mixed $offset</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     * @see ArrayAccess::offsetUnset()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function offsetUnset($offset)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        unset($this-&gt;_models[$offset]);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Collection_Activity_Item" methodcount="0" methodscovered="0" statementcount="2" statementscovered="2" totalcount="2" totalcovered="2">
        <sourcefile name="Item.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/Collection/Activity/Item.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Collection for Activity Item model</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Collection_Activity_Item</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_modelClassName = 'MaitreCorbeaux_Model_Activity_Item';</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Collection_Activity_Source" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Source.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/Collection/Activity/Source.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Collection for Activity Source model</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_modelClassName = 'MaitreCorbeaux_Model_Activity_Source';</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Mapper_Activity_Item" methodcount="10" methodscovered="7" statementcount="104" statementscovered="99" totalcount="114" totalcovered="106">
        <sourcefile name="Item.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/mappers/Activity/Item.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Item data mapper</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Mapper_Activity_Item</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="1">implements MaitreCorbeaux_Model_Mapper_Activity_ItemInterface</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var MaitreCorbeaux_Model_Mapper_Activity_SourceInterface</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_activitySourceMapper;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Return a join select between ActivityItem and ActivitySource table</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Db_Select</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createSelect()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        $itemDbTable = $this-&gt;getDbTable();</sourceline>
          <sourceline coveredcount="7">        $sourceDbTable = $this-&gt;getActivitySourceMapper()</sourceline>
          <sourceline coveredcount="7">                              -&gt;getDbTable();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        $dbAdapter = $itemDbTable-&gt;getAdapter();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $itemTableName = $dbAdapter-&gt;quoteIdentifier(</sourceline>
          <sourceline coveredcount="7">            $itemDbTable-&gt;info('name')</sourceline>
          <sourceline coveredcount="7">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="-1">        $sourceTableName = $dbAdapter-&gt;quoteIdentifier(</sourceline>
          <sourceline coveredcount="7">            $sourceDbTable-&gt;info('name')</sourceline>
          <sourceline coveredcount="7">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        $select = $dbAdapter-&gt;select();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        $cond = "$itemTableName.idActivitySourceActivityItem = "</sourceline>
          <sourceline coveredcount="7">              . "$sourceTableName.idActivitySource";</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        $select-&gt;from($itemDbTable-&gt;info('name'))</sourceline>
          <sourceline coveredcount="7">               -&gt;join($sourceDbTable-&gt;info('name'), $cond);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        return $select;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an Activity Item model from a data array</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_AbstractMapper::createModel()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function createModel(array $data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $cleanData = array(</sourceline>
          <sourceline coveredcount="9">            'id' =&gt; array_key_exists('idActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? $data['idActivityItem']</sourceline>
          <sourceline coveredcount="9">                    : null,</sourceline>
          <sourceline coveredcount="9">            'title' =&gt; array_key_exists('titleActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? $data['titleActivityItem']</sourceline>
          <sourceline coveredcount="9">                    : null,</sourceline>
          <sourceline coveredcount="9">            'description' =&gt; array_key_exists('descriptionActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? $data['descriptionActivityItem']</sourceline>
          <sourceline coveredcount="9">                    : null,</sourceline>
          <sourceline coveredcount="9">            'link' =&gt; array_key_exists('linkActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? $data['linkActivityItem']</sourceline>
          <sourceline coveredcount="9">                    : null,</sourceline>
          <sourceline coveredcount="9">            'externalId' =&gt; array_key_exists('externalIdActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? $data['externalIdActivityItem']</sourceline>
          <sourceline coveredcount="9">                    : null,</sourceline>
          <sourceline coveredcount="9">            'publicationDate' =&gt; array_key_exists('publicationDateActivityItem', $data)</sourceline>
          <sourceline coveredcount="9">                    ? new Zend_Date(</sourceline>
          <sourceline coveredcount="9">                        $data['publicationDateActivityItem'],</sourceline>
          <sourceline coveredcount="0">                        'yyyy-MM-dd HH:mm:ss'</sourceline>
          <sourceline coveredcount="9">                    )</sourceline>
          <sourceline coveredcount="9">                    : null</sourceline>
          <sourceline coveredcount="9">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="9">        $model = new MaitreCorbeaux_Model_Activity_Item($cleanData);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        // We use isset here, because we want only non-null value</sourceline>
          <sourceline coveredcount="9">        if (isset($data['idActivitySourceActivityItem'])) {</sourceline>
          <sourceline coveredcount="9">            $sourceMapper = $this-&gt;getActivitySourceMapper();</sourceline>
          <sourceline coveredcount="9">            $model-&gt;setSource($sourceMapper-&gt;createModel($data));</sourceline>
          <sourceline coveredcount="9">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="9">        return $model;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an Activity Item collection from a data array</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_AbstractMapper::createCollection()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function createCollection(array $data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        $collection = new MaitreCorbeaux_Model_Collection_Activity_Item();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        foreach ($data as $row) {</sourceline>
          <sourceline coveredcount="7">            $collection-&gt;add($this-&gt;createModel((array) $row));</sourceline>
          <sourceline coveredcount="7">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="7">        return $collection;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $externalId</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Source $source</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_ItemInterface::findExternalId()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function findByExternalId($externalId, MaitreCorbeaux_Model_Activity_Source $source)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        $dbTable = $this-&gt;getDbTable();</sourceline>
          <sourceline coveredcount="-1">        $rowset = $dbTable-&gt;fetchAll(</sourceline>
          <sourceline coveredcount="0">            array(</sourceline>
          <sourceline coveredcount="5">                'externalIdActivityItem = ?' =&gt; $externalId,</sourceline>
          <sourceline coveredcount="5">                'idActivitySourceActivityItem = ?' =&gt; $source-&gt;getId()</sourceline>
          <sourceline coveredcount="5">            )</sourceline>
          <sourceline coveredcount="5">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="5">        if (!count($rowset)) {</sourceline>
          <sourceline coveredcount="3">            return null;</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this-&gt;createModel($rowset-&gt;current()-&gt;toArray());</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Item $item</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_ItemInterface::save()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function save(MaitreCorbeaux_Model_Activity_Item $item)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $publicationDate = $item-&gt;getPublicationDate();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        if (null !== $publicationDate) {</sourceline>
          <sourceline coveredcount="2">            $publicationDate = $publicationDate-&gt;toString('yyyy-MM-dd HH:mm:ss');</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        $data = array(</sourceline>
          <sourceline coveredcount="2">            'titleActivityItem' =&gt; $item-&gt;getTitle(),</sourceline>
          <sourceline coveredcount="2">            'descriptionActivityItem' =&gt; $item-&gt;getDescription(),</sourceline>
          <sourceline coveredcount="2">            'linkActivityItem' =&gt; $item-&gt;getLink(),</sourceline>
          <sourceline coveredcount="2">            'externalIdActivityItem' =&gt; $item-&gt;getExternalId(),</sourceline>
          <sourceline coveredcount="0">            'publicationDateActivityItem' =&gt; $publicationDate</sourceline>
          <sourceline coveredcount="2">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        $source = $item-&gt;getSource();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">        // If no source model, we don't update the source id</sourceline>
          <sourceline coveredcount="2">        if (null !== $source) {</sourceline>
          <sourceline coveredcount="2">            $data['idActivitySourceActivityItem'] = $source-&gt;getId();</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        $dbTable = $this-&gt;getDbTable();</sourceline>
          <sourceline coveredcount="2">        $id = $item-&gt;getId();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        if (null === $id) {</sourceline>
          <sourceline coveredcount="1">            $id = $dbTable-&gt;insert($data);</sourceline>
          <sourceline coveredcount="1">            $item-&gt;setId($id);</sourceline>
          <sourceline coveredcount="1">        } else {</sourceline>
          <sourceline coveredcount="1">            $dbTable-&gt;update($data, array('idActivityItem = ?' =&gt; $id));</sourceline>
          <sourceline coveredcount="0">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $nbItems</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_Item</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_ItemInterface::fetchLatests()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function fetchLast($nbItems)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        $nbItems = (int) $nbItems;</sourceline>
          <sourceline coveredcount="3">        $select = $this-&gt;_createSelect();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        $select-&gt;order('publicationDateActivityItem DESC')</sourceline>
          <sourceline coveredcount="3">               -&gt;limit($nbItems);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        $dbAdapter = $this-&gt;getDbTable()</sourceline>
          <sourceline coveredcount="3">                          -&gt;getAdapter();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        $data = $dbAdapter-&gt;fetchAll($select);</sourceline>
          <sourceline coveredcount="3">        return $this-&gt;createCollection($data);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $offset</sourceline>
          <sourceline coveredcount="0">     * @param int $itemCountPerPage</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Paginator</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_ItemInterface::paginateAll()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function paginateAll($offset, $itemCountPerPage)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $select = $this-&gt;_createSelect();</sourceline>
          <sourceline coveredcount="4">        $select-&gt;order('publicationDateActivityItem DESC');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        return $this-&gt;_createPaginator($select, $offset, $itemCountPerPage);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_Item::getDbTable()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getDbTable()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="14">        if (null === $this-&gt;_dbTable) {</sourceline>
          <sourceline coveredcount="14">            $this-&gt;_dbTable =</sourceline>
          <sourceline coveredcount="14">                new MaitreCorbeaux_Model_DbTable_Activity_Item();</sourceline>
          <sourceline coveredcount="14">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="14">        return $this-&gt;_dbTable;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_SourceInterface</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_Item::getDbTable()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getActivitySourceMapper()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="9">        if (null === $this-&gt;_activitySourceMapper) {</sourceline>
          <sourceline coveredcount="9">            $this-&gt;_activitySourceMapper =</sourceline>
          <sourceline coveredcount="9">                new MaitreCorbeaux_Model_Mapper_Activity_Source();</sourceline>
          <sourceline coveredcount="9">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="9">        return $this-&gt;_activitySourceMapper;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Mapper_Activity_SourceInterface $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_Activity_ItemInterface</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setActivitySourceMapper(</sourceline>
          <sourceline coveredcount="0">        MaitreCorbeaux_Model_Mapper_Activity_SourceInterface $value</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_activitySourceMapper = $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Activity_Item" methodcount="14" methodscovered="14" statementcount="21" statementscovered="21" totalcount="35" totalcovered="35">
        <sourcefile name="Item.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/Activity/Item.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Item Model</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var int</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_id;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_title;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_description;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_link;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Date</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_publicationDate;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_externalId;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_source;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return int</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getId()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        return $this-&gt;_id;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setId($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $this-&gt;_id = (int) $value;</sourceline>
          <sourceline coveredcount="11">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getTitle()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_title;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setTitle($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="12">        $this-&gt;_title = (string) $value;</sourceline>
          <sourceline coveredcount="12">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getDescription()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_description;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setDescription($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="12">        $this-&gt;_description = (string) $value;</sourceline>
          <sourceline coveredcount="12">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getLink()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_link;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setLink($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="12">        $this-&gt;_link = (string) $value;</sourceline>
          <sourceline coveredcount="12">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Date</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getPublicationDate()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_publicationDate;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Date $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setPublicationDate(Zend_Date $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="12">        $this-&gt;_publicationDate = $value;</sourceline>
          <sourceline coveredcount="12">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getExternalId()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        return $this-&gt;_externalId;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setExternalId($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="12">        $this-&gt;_externalId = (string) $value;</sourceline>
          <sourceline coveredcount="12">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getSource()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="9">        return $this-&gt;_source;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param MaitreCorbeaux_Model_Activity_Source $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Item</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setSource(MaitreCorbeaux_Model_Activity_Source $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="10">        $this-&gt;_source = $value;</sourceline>
          <sourceline coveredcount="10">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Activity_Source" methodcount="8" methodscovered="8" statementcount="12" statementscovered="12" totalcount="20" totalcovered="20">
        <sourcefile name="Source.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/Activity/Source.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Source Model</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var int</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_id;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_name;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_slug;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_link;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return int</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getId()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="9">        return $this-&gt;_id;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param int $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setId($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $this-&gt;_id = (int) $value;</sourceline>
          <sourceline coveredcount="11">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getName()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        return $this-&gt;_name;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setName($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $this-&gt;_name = (string) $value;</sourceline>
          <sourceline coveredcount="11">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public final function getSlug()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="7">        return $this-&gt;_slug;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public final function setSlug($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $this-&gt;_slug = (string) $value;</sourceline>
          <sourceline coveredcount="11">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public final function getLink()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="5">        return $this-&gt;_link;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public final function setLink($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $this-&gt;_link = (string) $value;</sourceline>
          <sourceline coveredcount="11">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_DbTable_Activity_Item" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Item.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/DbTable/Activity/Item.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * ActivityItem table</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_DbTable_Activity_Item extends Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_name = 'ActivityItem';</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_referenceMap = array(</sourceline>
          <sourceline coveredcount="0">        'ActivitySource' =&gt; array(</sourceline>
          <sourceline coveredcount="0">            'columns' =&gt; 'idActivitySourceActivityItem',</sourceline>
          <sourceline coveredcount="0">            'refTableClass' =&gt; 'MaitreCorbeaux_Model_DbTable_Activity_Source',</sourceline>
          <sourceline coveredcount="0">            'refColumns' =&gt; 'idActivitySource'</sourceline>
          <sourceline coveredcount="0">        )</sourceline>
          <sourceline coveredcount="0">    );</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_DbTable_Activity_Source" methodcount="0" methodscovered="0" statementcount="1" statementscovered="1" totalcount="1" totalcovered="1">
        <sourcefile name="Source.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/DbTable/Activity/Source.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * ActivitySource table</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="0"> * @see Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_DbTable_Activity_Source extends Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_name = 'ActivitySource';</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_dependentTables = array(</sourceline>
          <sourceline coveredcount="0">        'MaitreCorbeaux_Model_DbTable_Activity_Item'</sourceline>
          <sourceline coveredcount="0">    );</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_AbstractModel" methodcount="5" methodscovered="4" statementcount="37" statementscovered="35" totalcount="42" totalcovered="39">
        <sourcefile name="AbstractModel.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/AbstractModel.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Base class for models</sourceline>
          <sourceline coveredcount="0"> * Provides some basic methods for accessing data :</sourceline>
          <sourceline coveredcount="0"> * - Magic methods __get and __set</sourceline>
          <sourceline coveredcount="0"> * - populate and toArray methods for working with arrays</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="2"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="1"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Model</sourceline>
          <sourceline coveredcount="2"> */</sourceline>
          <sourceline coveredcount="3" startclass="1">abstract class MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="1">    /**</sourceline>
          <sourceline coveredcount="0">     * Populates data, if any</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function __construct(array $data = null)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="20">        if (null !== $data) {</sourceline>
          <sourceline coveredcount="12">            $this-&gt;populate($data);</sourceline>
          <sourceline coveredcount="12">        }</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Returns model data into an array</sourceline>
          <sourceline coveredcount="0">     * Use class reflection to returns every properties of the model</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return array</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function toArray()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="2">        $data = array();</sourceline>
          <sourceline coveredcount="2">        $reflection = new Zend_Reflection_Class($this);</sourceline>
          <sourceline coveredcount="2">        $methods = $reflection-&gt;getMethods();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        foreach ($methods as $method) {</sourceline>
          <sourceline coveredcount="2">            $methodName = $method-&gt;name;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">            if (substr($methodName, 0, 3) == 'get') {</sourceline>
          <sourceline coveredcount="2">                $key = lcfirst(substr($methodName, 3));</sourceline>
          <sourceline coveredcount="2">                $data[$key] = $this-&gt;$methodName();</sourceline>
          <sourceline coveredcount="2">            }</sourceline>
          <sourceline coveredcount="2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="2">        return $data;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Fill model with the data</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function populate($data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="14">        foreach ($data as $key =&gt; $value) {</sourceline>
          <sourceline coveredcount="14">            $this-&gt;$key = $value;</sourceline>
          <sourceline coveredcount="14">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="14">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="0">     * @param string $name</sourceline>
          <sourceline coveredcount="0">     * @return mixed</sourceline>
          <sourceline coveredcount="1">     */</sourceline>
          <sourceline coveredcount="0">    public function __get($name)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="3">        $methodName = 'get' . ucfirst($name);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        if (!method_exists($this, $methodName)) {</sourceline>
          <sourceline coveredcount="-1">            throw new MaitreCorbeaux_Model_Exception(</sourceline>
          <sourceline coveredcount="0">                'Unexistent property to get : ' . $name</sourceline>
          <sourceline coveredcount="-1">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="3">        return $this-&gt;$methodName();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_Model_Exception</sourceline>
          <sourceline coveredcount="0">     * @param string $name</sourceline>
          <sourceline coveredcount="0">     * @param mixed $value</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function __set($name, $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="16">        $methodName = 'set' . ucfirst($name);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="16">        if (!method_exists($this, $methodName)) {</sourceline>
          <sourceline coveredcount="2">            throw new MaitreCorbeaux_Model_Exception(</sourceline>
          <sourceline coveredcount="0">                'Unexistent property to set : ' . $name</sourceline>
          <sourceline coveredcount="2">            );</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="14">        return $this-&gt;$methodName($value);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
    <subpackage name="Form" methodcount="1" methodscovered="1" statementcount="33" statementscovered="33" totalcount="34" totalcovered="34">
      <class name="MaitreCorbeaux_Form_Contact" methodcount="1" methodscovered="1" statementcount="33" statementscovered="33" totalcount="34" totalcovered="34">
        <sourcefile name="Contact.php" sourcefile="/var/www/maitre-corbeaux.com/application/forms/Contact.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Contact form</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Form</sourceline>
          <sourceline coveredcount="0"> * @see Zend_Form</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Form_Contact extends Zend_Form</sourceline>
          <sourceline coveredcount="1">{</sourceline>
          <sourceline coveredcount="0">    public function init()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $this-&gt;setMethod('post');</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('text', 'email', array(</sourceline>
          <sourceline coveredcount="4">            'label' =&gt; 'Votre adresse email* :',</sourceline>
          <sourceline coveredcount="4">            'required' =&gt; true,</sourceline>
          <sourceline coveredcount="4">            'validators' =&gt; array('EmailAddress')</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('text', 'subject', array(</sourceline>
          <sourceline coveredcount="4">            'label' =&gt; 'Objet de votre message* :',</sourceline>
          <sourceline coveredcount="4">            'required' =&gt; true,</sourceline>
          <sourceline coveredcount="4">            'validators' =&gt; array(array('StringLength', false, array(5, 50)))</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('textarea', 'body', array(</sourceline>
          <sourceline coveredcount="4">            'label' =&gt; 'Votre message* :',</sourceline>
          <sourceline coveredcount="0">            'required' =&gt; true</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('checkbox', 'copy', array(</sourceline>
          <sourceline coveredcount="4">            'label' =&gt; 'Je souhaite recevoir une copie de cet email :',</sourceline>
          <sourceline coveredcount="4">            'decorators' =&gt; array('Label',</sourceline>
          <sourceline coveredcount="4">                                  'ViewHelper',</sourceline>
          <sourceline coveredcount="4">                                  array('HtmlTag',</sourceline>
          <sourceline coveredcount="4">                                        array('tag' =&gt; 'dd',</sourceline>
          <sourceline coveredcount="4">                                              'id' =&gt; 'copy-element')))</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('captcha', 'captcha', array(</sourceline>
          <sourceline coveredcount="0">            'captcha' =&gt; 'ReCaptcha'</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $this-&gt;addElement('submit', 'send', array(</sourceline>
          <sourceline coveredcount="4">            'label' =&gt; 'Envoyer',</sourceline>
          <sourceline coveredcount="4">            'decorators' =&gt; array('ViewHelper',</sourceline>
          <sourceline coveredcount="4">                                  array('HtmlTag',</sourceline>
          <sourceline coveredcount="4">                                        array('tag' =&gt; 'dd',</sourceline>
          <sourceline coveredcount="4">                                              'id' =&gt; 'send-element')))</sourceline>
          <sourceline coveredcount="4">        ));</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
    <subpackage name="Bootstrap" methodcount="5" methodscovered="5" statementcount="14" statementscovered="14" totalcount="19" totalcovered="19">
      <class name="Bootstrap" methodcount="5" methodscovered="5" statementcount="14" statementscovered="14" totalcount="19" totalcovered="19">
        <sourcefile name="Bootstrap.php" sourcefile="/var/www/maitre-corbeaux.com/application/Bootstrap.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Main Bootstrap class</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Default</sourceline>
          <sourceline coveredcount="0"> * @subpackage Bootstrap</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class Bootstrap extends Zend_Application_Bootstrap_Bootstrap</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize Google Analytics view helper</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return void</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _initGoogleAnalytics()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        $this-&gt;bootstrap('view');</sourceline>
          <sourceline coveredcount="13">        $view = $this-&gt;getResource('view');</sourceline>
          <sourceline coveredcount="13">        $options = $this-&gt;getOption('googleAnalytics');</sourceline>
          <sourceline coveredcount="13">        $view-&gt;googleAnalytics($options['accountId'], $options['mode']);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize ReCaptcha Service</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Service_ReCaptcha</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _initReCaptcha()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        $options = $this-&gt;getOption('reCaptcha');</sourceline>
          <sourceline coveredcount="13">        $service = new Zend_Service_ReCaptcha($options['publicKey'],</sourceline>
          <sourceline coveredcount="13">                                              $options['privateKey']);</sourceline>
          <sourceline coveredcount="13">        return $service;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize Contact Form</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return array</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _initContact()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        $options = $this-&gt;getOption('contact');</sourceline>
          <sourceline coveredcount="13">        return $options;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize Paginator</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _initPaginator()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        Zend_View_Helper_PaginationControl::setDefaultViewPartial('_pagination-control.phtml');</sourceline>
          <sourceline coveredcount="13">        Zend_Paginator::setDefaultScrollingStyle('Elastic');</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Initialize Twitter configuration</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return array</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _initTwitter()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        $options = $this-&gt;getOption('twitter');</sourceline>
          <sourceline coveredcount="13">        return $options;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
  </package>
  <package name="View" methodcount="9" methodscovered="9" statementcount="37" statementscovered="37" totalcount="46" totalcovered="46">
    <subpackage name="Helper" methodcount="9" methodscovered="9" statementcount="37" statementscovered="37" totalcount="46" totalcovered="46">
      <class name="MaitreCorbeaux_View_Helper_GoogleAnalytics" methodcount="9" methodscovered="9" statementcount="37" statementscovered="37" totalcount="46" totalcovered="46">
        <sourcefile name="GoogleAnalytics.php" sourcefile="/var/www/maitre-corbeaux.com/application/views/helpers/GoogleAnalytics.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Google Analytics view helper</sourceline>
          <sourceline coveredcount="0"> * Render a traditional or asynchronous Google Analytics snippet</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package View</sourceline>
          <sourceline coveredcount="0"> * @subpackage Helper</sourceline>
          <sourceline coveredcount="0"> * @see Zend_View_Helper_Abstract</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_View_Helper_GoogleAnalytics</sourceline>
          <sourceline coveredcount="0">extends Zend_View_Helper_Abstract</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    const MODE_ASYNCHRONOUS = 'asynchronous';</sourceline>
          <sourceline coveredcount="0">    const MODE_TRADITIONAL = 'traditional';</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Google Analytics account's Id</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="10">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_accountId;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Google Analytics snippet type</sourceline>
          <sourceline coveredcount="0">     * Can be traditional or asynchronous</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_mode;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $accountId</sourceline>
          <sourceline coveredcount="0">     * @param string $mode</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_View_Helper_GoogleAnalytics</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function googleAnalytics($accountId = null, $mode = null)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="18">        if (null !== $accountId) {</sourceline>
          <sourceline coveredcount="17">            $this-&gt;setAccountId($accountId);</sourceline>
          <sourceline coveredcount="17">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="18">        if (null !== $mode) {</sourceline>
          <sourceline coveredcount="16">            $this-&gt;setMode($mode);</sourceline>
          <sourceline coveredcount="16">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="18">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getAccountId()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="13">        return $this-&gt;_accountId;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_View_Helper_GoogleAnalytics</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setAccountId($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="17">        $this-&gt;_accountId = (string) $value;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="1">     */</sourceline>
          <sourceline coveredcount="0">    public function getMode()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        return $this-&gt;_mode;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param string $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_View_Helper_GoogleAnalytics</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setMode($value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="16">        $this-&gt;_mode = (string) $value;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * String conversion</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function __toString()</sourceline>
          <sourceline coveredcount="1">    {</sourceline>
          <sourceline coveredcount="12">        return $this-&gt;render();</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Render the Google Analytics snipper</sourceline>
          <sourceline coveredcount="0">     * depending on the snippet mode selected</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @throws MaitreCorbeaux_View_Helper_Exception</sourceline>
          <sourceline coveredcount="0">     * @return string HTML snippet</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function render()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="14">        if (empty($this-&gt;_mode)) {</sourceline>
          <sourceline coveredcount="1">            throw new MaitreCorbeaux_View_Helper_Exception("Snippet mode can't be empty");</sourceline>
          <sourceline coveredcount="-2">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="13">        switch ($this-&gt;_mode) {</sourceline>
          <sourceline coveredcount="13">            case self::MODE_TRADITIONAL:</sourceline>
          <sourceline coveredcount="1">                return $this-&gt;_renderTraditional();</sourceline>
          <sourceline coveredcount="-2">                break;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="12">            case self::MODE_ASYNCHRONOUS:</sourceline>
          <sourceline coveredcount="11">                return $this-&gt;_renderAsynchronous();</sourceline>
          <sourceline coveredcount="-2">                break;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">            default:</sourceline>
          <sourceline coveredcount="1">                throw new MaitreCorbeaux_View_Helper_Exception('Unknown snippet mode : "' . $this-&gt;_mode . '"');</sourceline>
          <sourceline coveredcount="-2">                break;</sourceline>
          <sourceline coveredcount="1">        }</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Render the asynchronous snippet</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string Asynchronous HTML snippet</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _renderAsynchronous()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="11">        $accountId = $this-&gt;view-&gt;escape($this-&gt;getAccountId());</sourceline>
          <sourceline coveredcount="0">        $javascript = &lt;&lt;&lt; EOF</sourceline>
          <sourceline coveredcount="0">&lt;script type="text/javascript"&gt;</sourceline>
          <sourceline coveredcount="0">  var _gaq = _gaq || [];</sourceline>
          <sourceline coveredcount="0">  _gaq.push(['_setAccount', '$accountId']);</sourceline>
          <sourceline coveredcount="0">  _gaq.push(['_trackPageview']);</sourceline>
          <sourceline coveredcount="0">  (function() {</sourceline>
          <sourceline coveredcount="0">    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;</sourceline>
          <sourceline coveredcount="0">    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';</sourceline>
          <sourceline coveredcount="0">    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);</sourceline>
          <sourceline coveredcount="0">  })();</sourceline>
          <sourceline coveredcount="11">&lt;/script&gt;</sourceline>
          <sourceline coveredcount="11">EOF;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="11">        return $javascript;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Render the traditional snippet</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return string Traditional HTML snippet</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _renderTraditional()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $accountId = $this-&gt;view-&gt;escape($this-&gt;getAccountId());</sourceline>
          <sourceline coveredcount="0">        $javascript = &lt;&lt;&lt; EOF</sourceline>
          <sourceline coveredcount="0">&lt;script type="text/javascript"&gt;</sourceline>
          <sourceline coveredcount="0">var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");</sourceline>
          <sourceline coveredcount="0">document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));</sourceline>
          <sourceline coveredcount="0">&lt;/script&gt;</sourceline>
          <sourceline coveredcount="0">&lt;script type="text/javascript"&gt;</sourceline>
          <sourceline coveredcount="0">try{</sourceline>
          <sourceline coveredcount="0">var pageTracker = _gat._getTracker("$accountId");</sourceline>
          <sourceline coveredcount="0">pageTracker._trackPageview();</sourceline>
          <sourceline coveredcount="1">} catch(err) {}&lt;/script&gt;</sourceline>
          <sourceline coveredcount="1">EOF;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $javascript;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
  </package>
  <package name="Model" methodcount="7" methodscovered="5" statementcount="40" statementscovered="37" totalcount="47" totalcovered="42">
    <subpackage name="Mapper" methodcount="7" methodscovered="5" statementcount="40" statementscovered="37" totalcount="47" totalcovered="42">
      <class name="MaitreCorbeaux_Model_Mapper_Activity_Source" methodcount="4" methodscovered="4" statementcount="29" statementscovered="29" totalcount="33" totalcovered="33">
        <sourcefile name="Source.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/mappers/Activity/Source.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Activity Source data mapper</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Model</sourceline>
          <sourceline coveredcount="0"> * @subpackage Mapper</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">class MaitreCorbeaux_Model_Mapper_Activity_Source</sourceline>
          <sourceline coveredcount="0">extends MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="1">implements MaitreCorbeaux_Model_Mapper_Activity_SourceInterface</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an Activity Source model from a data array</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Activity_Source</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_AbstractMapper::createModel()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function createModel(array $data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="0">        $cleanData = array(</sourceline>
          <sourceline coveredcount="10">            'id' =&gt; array_key_exists('idActivitySource', $data)</sourceline>
          <sourceline coveredcount="10">                    ? $data['idActivitySource']</sourceline>
          <sourceline coveredcount="10">                    : null,</sourceline>
          <sourceline coveredcount="10">            'slug' =&gt; array_key_exists('slugActivitySource', $data)</sourceline>
          <sourceline coveredcount="10">                      ? $data['slugActivitySource']</sourceline>
          <sourceline coveredcount="10">                      : null,</sourceline>
          <sourceline coveredcount="10">            'name' =&gt; array_key_exists('nameActivitySource', $data)</sourceline>
          <sourceline coveredcount="10">                      ? $data['nameActivitySource']</sourceline>
          <sourceline coveredcount="10">                      : null,</sourceline>
          <sourceline coveredcount="10">            'link' =&gt; array_key_exists('linkActivitySource', $data)</sourceline>
          <sourceline coveredcount="10">                      ? $data['linkActivitySource']</sourceline>
          <sourceline coveredcount="8">                      : null</sourceline>
          <sourceline coveredcount="10">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="10">        return new MaitreCorbeaux_Model_Activity_Source($cleanData);</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an Activity Source collection from a data array</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_AbstractMapper::createCollection()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function createCollection(array $data)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $collection = new MaitreCorbeaux_Model_Collection_Activity_Source();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        foreach ($data as $row) {</sourceline>
          <sourceline coveredcount="1">            $collection-&gt;add($this-&gt;createModel((array) $row));</sourceline>
          <sourceline coveredcount="1">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $collection;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_Source::getDbTable()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getDbTable()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="8">        if (null === $this-&gt;_dbTable) {</sourceline>
          <sourceline coveredcount="8">            $this-&gt;_dbTable =</sourceline>
          <sourceline coveredcount="8">                new MaitreCorbeaux_Model_DbTable_Activity_Source();</sourceline>
          <sourceline coveredcount="8">        }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="8">        return $this-&gt;_dbTable;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_Activity_Source</sourceline>
          <sourceline coveredcount="0">     * @see MaitreCorbeaux_Model_Mapper_Activity_SourceInterface::fetchAll()</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public final function fetchAll()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="1">        $rowset = $this-&gt;getDbTable()</sourceline>
          <sourceline coveredcount="1">                       -&gt;fetchAll();</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="1">        return $this-&gt;createCollection($rowset-&gt;toArray());</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
      <class name="MaitreCorbeaux_Model_Mapper_AbstractMapper" methodcount="3" methodscovered="1" statementcount="11" statementscovered="8" totalcount="14" totalcovered="9">
        <sourcefile name="AbstractMapper.php" sourcefile="/var/www/maitre-corbeaux.com/application/models/mappers/AbstractMapper.php">
          <sourceline coveredcount="0">&lt;?php</sourceline>
          <sourceline coveredcount="0">/**</sourceline>
          <sourceline coveredcount="0"> * Base class for Data Mappers</sourceline>
          <sourceline coveredcount="0"> *</sourceline>
          <sourceline coveredcount="0"> * @author Lucas CORBEAUX</sourceline>
          <sourceline coveredcount="0"> * @category MaitreCorbeaux</sourceline>
          <sourceline coveredcount="0"> * @package Model</sourceline>
          <sourceline coveredcount="0"> * @subpackage Mapper</sourceline>
          <sourceline coveredcount="0"> */</sourceline>
          <sourceline coveredcount="0" startclass="1">abstract class MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="0">{</sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @var Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected $_dbTable;</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create a model from an array of data</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_AbstractModel</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    abstract public function createModel(array $data);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create a collection of models from an array of data</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param array $data</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Collection_AbstractCollection</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    abstract public function createCollection(array $data);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     * Create an empty paginator</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Db_Select $select</sourceline>
          <sourceline coveredcount="0">     * @param int $offset</sourceline>
          <sourceline coveredcount="0">     * @param int $itemCountPerPage</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    protected function _createPaginator(</sourceline>
          <sourceline coveredcount="0">        Zend_Db_Select $select, $offset, $itemCountPerPage</sourceline>
          <sourceline coveredcount="0">    )</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="4">        $adapter = new MaitreCorbeaux_Paginator_Adapter_ModelCollection(</sourceline>
          <sourceline coveredcount="4">            $select,</sourceline>
          <sourceline coveredcount="0">            $this</sourceline>
          <sourceline coveredcount="4">        );</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $paginator = new Zend_Paginator($adapter);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        $paginator-&gt;setCurrentPageNumber($offset)</sourceline>
          <sourceline coveredcount="4">                  -&gt;setItemCountPerPage($itemCountPerPage);</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="4">        return $paginator;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @return Zend_Db_Table_Abstract</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function getDbTable()</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        return $this-&gt;_dbTable;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="0"></sourceline>
          <sourceline coveredcount="0">    /**</sourceline>
          <sourceline coveredcount="0">     *</sourceline>
          <sourceline coveredcount="0">     * @param Zend_Db_Table_Abstract $value</sourceline>
          <sourceline coveredcount="0">     * @return MaitreCorbeaux_Model_Mapper_AbstractMapper</sourceline>
          <sourceline coveredcount="0">     */</sourceline>
          <sourceline coveredcount="0">    public function setDbTable(Zend_Db_Table_Abstract $value)</sourceline>
          <sourceline coveredcount="0">    {</sourceline>
          <sourceline coveredcount="-1">        $this-&gt;_dbTable = $value;</sourceline>
          <sourceline coveredcount="-1">        return $this;</sourceline>
          <sourceline coveredcount="0">    }</sourceline>
          <sourceline coveredcount="1">}</sourceline>
        </sourcefile>
      </class>
    </subpackage>
  </package>
</snapshot>
